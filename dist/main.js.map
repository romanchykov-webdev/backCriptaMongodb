{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":";;AAAA,uCAA2C;AAC3C,yDAAqD;AACrD,2CAA+C;AAC/C,6CAAiE;AACjE,2CAAgD;AAEhD,KAAK,UAAU,SAAS;IACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;IAGhD,GAAG,CAAC,UAAU,CAAC;QACb,MAAM,EAAE;YACN,uBAAuB;YACvB,kDAAkD;YAClD,oCAAoC;YACpC,4BAA4B;SAC7B;QACD,OAAO,EAAE,wCAAwC;QACjD,WAAW,EAAE,IAAI;QACjB,cAAc,EAAE;YACd,QAAQ;YACR,kBAAkB;YAClB,cAAc;YACd,QAAQ;YACR,eAAe;YACf,iBAAiB;SAClB;KACF,CAAC,CAAC;IAGH,GAAG,CAAC,cAAc,CAAC,IAAI,uBAAc,EAAE,CAAC,CAAC;IAGzC,MAAM,MAAM,GAAG,IAAI,yBAAe,EAAE;SACjC,QAAQ,CAAC,2BAA2B,CAAC;SACrC,cAAc,CAAC,uCAAuC,CAAC;SACvD,UAAU,CAAC,KAAK,CAAC;SACjB,MAAM,CAAC,KAAK,CAAC;SACb,KAAK,EAAE,CAAC;IAEX,MAAM,QAAQ,GAAG,uBAAa,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC3D,uBAAa,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAG1C,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,sBAAa,CAAC,CAAC;IAC7C,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAGvC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvB,OAAO,CAAC,GAAG,CAAC,+CAA+C,IAAI,EAAE,CAAC,CAAC;AACrE,CAAC;AAED,SAAS,EAAE,CAAC","sourcesContent":["import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './modules/app/app.module';\nimport { ConfigService } from '@nestjs/config';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { ValidationPipe } from '@nestjs/common';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  // Middleware для обработки CORS\n  app.enableCors({\n    origin: [\n      'http://localhost:3000',\n      'https://cryptocurrency-front-end-fb4n.vercel.app',\n      'https://crypto-mu-eight.vercel.app',\n      'http://romancf5.beget.tech',\n    ],\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\n    credentials: true, // Разрешение отправки cookie и аутентификации через CORS\n    allowedHeaders: [\n      'Origin',\n      'X-Requested-With',\n      'Content-Type',\n      'Accept',\n      'Authorization',\n      'x-custom-header',\n    ],\n  });\n\n  // Использование глобального валидационного пайпа\n  app.useGlobalPipes(new ValidationPipe());\n\n  // Создание Swagger документации\n  const config = new DocumentBuilder()\n    .setTitle('API testing documentation')\n    .setDescription('This API is for testing documentation')\n    .setVersion('1.0')\n    .addTag('API')\n    .build();\n\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('api', app, document);\n\n  // Получение порта из конфигурации\n  const configService = app.get(ConfigService);\n  const port = configService.get('port');\n\n  // Запуск приложения\n  await app.listen(port);\n  console.log(`Application is running on: http://localhost:${port}`);\n}\n\nbootstrap();\n"]}