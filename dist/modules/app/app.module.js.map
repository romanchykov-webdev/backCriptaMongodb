{"version":3,"file":"app.module.js","sourceRoot":"","sources":["../../../src/modules/app/app.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAAwC;AACxC,+CAAkD;AAClD,qDAAiD;AACjD,+CAA2C;AAC3C,qDAAiD;AACjD,qDAAiD;AACjD,2CAA6D;AAC7D,yDAAkD;AAElD,0DAAiD;AACjD,6DAAyD;AACzD,wDAAoD;AACpD,oEAAgE;AAChE,4EAAwE;AACxE,yEAAgE;AA2BzD,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG,CAAA;AAAZ,8BAAS;oBAAT,SAAS;IAzBrB,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY,CAAC,OAAO,CAAC;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,CAAC,wBAAc,CAAC;aACvB,CAAC;YACF,yBAAc,CAAC,YAAY,CAAC;gBAC1B,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,MAAM,EAAE,CAAC,sBAAa,CAAC;gBACvB,UAAU,EAAE,CAAC,aAA4B,EAAE,EAAE,CAAC,CAAC;oBAC7C,GAAG,EAAE,aAAa,CAAC,GAAG,CAAS,aAAa,CAAC;iBAC9C,CAAC;aACH,CAAC;YACF,yBAAc,CAAC,UAAU,CAAC;gBACxB,EAAE,IAAI,EAAE,iBAAI,CAAC,IAAI,EAAE,MAAM,EAAE,wBAAU,EAAE;gBACvC,EAAE,IAAI,EAAE,2BAAS,CAAC,IAAI,EAAE,MAAM,EAAE,kCAAe,EAAE;aAClD,CAAC;YACF,wBAAU;YACV,wBAAU;YACV,0BAAW;YACX,kCAAe;SAChB;QACD,WAAW,EAAE,CAAC,8BAAa,CAAC;QAC5B,SAAS,EAAE,CAAC,wBAAU,CAAC;KACxB,CAAC;GACW,SAAS,CAAG","sourcesContent":["import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { UserModule } from \"../user/user.module\";\nimport { AuthModule } from \"../auth/auth.module\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport configurations from \"../../configurations\";\n\nimport { User } from \"../user/models/user.model\";\nimport { UserSchema } from \"../user/schemas/user.schema\";\nimport { TokenModule } from \"../token/token.module\";\nimport { WatchlistModule } from \"../watchlist/watchlist.module\";\nimport { WatchlistSchema } from \"../watchlist/schemas/watchlist.schema\";\nimport { Watchlist } from \"../watchlist/models/watchlist.model\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configurations],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get<string>(\"MONGODB_URI\"),\n      }),\n    }),\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Watchlist.name, schema: WatchlistSchema },\n    ]),\n    UserModule,\n    AuthModule,\n    TokenModule,\n    WatchlistModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"]}