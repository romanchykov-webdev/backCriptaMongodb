{"version":3,"file":"user.controller.js","sourceRoot":"","sources":["../../../src/modules/user/user.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,2CAOwB;AACxB,iDAA6C;AAC7C,+BAAyD;AACzD,sDAAsD;AACtD,6CAAuD;AAGhD,IAAM,cAAc,GAApB,MAAM,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAOzD,UAAU,CACA,SAAwB,EACzB,OAAO;QAEd,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAE1B,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IACzD,CAAC;IASD,cAAc,CACJ,iBAAoC,EACrC,OAAO;QAEd,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;IACrE,CAAC;IASD,UAAU,CAAQ,OAAO;QACvB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;CAGF,CAAA;AA7CY,wCAAc;AAQzB;IAJC,IAAA,iBAAO,EAAC,KAAK,CAAC;IACd,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,mBAAa,EAAE,CAAC;IACjD,IAAA,kBAAS,EAAC,wBAAY,CAAC;IACvB,IAAA,cAAK,GAAE;IAEL,WAAA,IAAA,aAAI,GAAE,CAAA;IACN,WAAA,IAAA,YAAG,GAAE,CAAA;;qCADa,mBAAa;;gDAMjC;AASD;IAJC,IAAA,iBAAO,EAAC,KAAK,CAAC;IACd,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IAC5B,IAAA,kBAAS,EAAC,wBAAY,CAAC;IACvB,IAAA,cAAK,EAAC,iBAAiB,CAAC;IAEtB,WAAA,IAAA,aAAI,GAAE,CAAA;IACN,WAAA,IAAA,YAAG,GAAE,CAAA;;qCADqB,uBAAiB;;oDAK7C;AASD;IAJC,IAAA,iBAAO,GAAE;IACT,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IAC5B,IAAA,kBAAS,EAAC,wBAAY,CAAC;IACvB,IAAA,eAAM,GAAE;IACG,WAAA,IAAA,YAAG,GAAE,CAAA;;;;gDAGhB;yBA1CU,cAAc;IAD1B,IAAA,mBAAU,EAAC,OAAO,CAAC;qCAEwB,0BAAW;GAD1C,cAAc,CA6C1B","sourcesContent":["\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Patch,\n  Req,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { UserService } from \"./user.service\";\nimport { UpdateUserDTO, UpdatePasswordDTO } from \"./dto\";\nimport { JwtAuthGuard } from \"../../guards/jwt-guard\";\nimport { ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"users\")\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  //update user\n  @ApiTags(\"API\")\n  @ApiResponse({ status: 200, type: UpdateUserDTO })\n  @UseGuards(JwtAuthGuard)\n  @Patch()\n  updateUser(\n    @Body() updateDTO: UpdateUserDTO,\n    @Req() request,\n  ): Promise<UpdateUserDTO> {\n    const user = request.user;\n    //console.log(user);\n    return this.userService.updateUser(user.id, updateDTO);\n  }\n\n  //update user-----------\n\n  //update Password controller\n  @ApiTags(\"API\")\n  @ApiResponse({ status: 200 })\n  @UseGuards(JwtAuthGuard)\n  @Patch(\"change-password\")\n  updatePassword(\n    @Body() updatePasswordDto: UpdatePasswordDTO,\n    @Req() request,\n  ): Promise<any> {\n    const user = request.user;\n    return this.userService.updatePassword(user.id, updatePasswordDto);\n  }\n\n  //update user end----------\n\n  //delete account user\n  @ApiTags()\n  @ApiResponse({ status: 200 })\n  @UseGuards(JwtAuthGuard)\n  @Delete()\n  deleteUser(@Req() request): Promise<boolean> {\n    const user = request.user;\n    return this.userService.deleteUser(user.id);\n  }\n\n  //delete account user end---\n}\n"]}